import{r as M,c as g,a as C,b as N,o as S,d as q,i as $,e as m,f as T,t as u,p as A,F as v,S as I,m as B,u as k,C as w}from"./vendor.891c9517.js";const P=function(){const a=document.createElement("link").relList;if(a&&a.supports&&a.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))p(n);new MutationObserver(n=>{for(const s of n)if(s.type==="childList")for(const f of s.addedNodes)f.tagName==="LINK"&&f.rel==="modulepreload"&&p(f)}).observe(document,{childList:!0,subtree:!0});function d(n){const s={};return n.integrity&&(s.integrity=n.integrity),n.referrerpolicy&&(s.referrerPolicy=n.referrerpolicy),n.crossorigin==="use-credentials"?s.credentials="include":n.crossorigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function p(n){if(n.ep)return;n.ep=!0;const s=d(n);fetch(n.href,s)}};P();const K=(i,a)=>{const d=i.length-1;if(i[d][1]<=a)return o=>!1;let p=0,n=d,s=null;for(;p<=n;){let o=Math.floor((p+n)/2);i[o][1]>a?(s=o,n=o-1):p=o+1}const f=new Set;for(let o=s;o<d;o+=1)f.add(i[o][0]);return o=>f.has(o)};var x=["pediatric_2yo"];const R=u("<p>select a dataset:&nbsp;<select></select></p>"),z=u("<p>select a feature:&nbsp;<select></select></p>"),H=u('<p>select a cutoff:&nbsp;<input type="number" step="0.1" min="0" max="10"></p>'),J=u('<p>select mode:&nbsp;<select><option value="g">greater than</option><option value="l">lesser or equal than</option></select></p>'),Q=u("<p><button>subset</button></p>"),U=u("<p><button>reset</button></p>"),V=u("<p>disp gene: </p>"),W=u("<p>cutoff: </p>"),X=u("<p>comparison set to: <!> than</p>"),Y=u('<canvas id="chart"></canvas>'),G=u("<option></option>"),Z=u("<p>please input gene and cutoff</p>");M(()=>{let i=null,a=null,d={type:"scatter",data:null,options:null};const[p,n]=g(x[0]),[s,f]=g(null),[o,L]=g(null,{equals:!1}),[h,_]=g(null),[y,j]=g(!0),[b]=C(p,async e=>await fetch(`data/${e}/cells.json`).then(l=>l.json())),[O]=C(o,async e=>await fetch(`data/${k(p)}/gene/${e}.json`).then(l=>l.json()));return N(S(O,e=>{a=K(e,h()),i.update()},{defer:!0})),N(S(b,e=>{const l=A("mpn65",Object.keys(e.cells).length).map(t=>`rgb(${parseInt(t.slice(0,2),16)}, ${parseInt(t.slice(2,4),16)}, ${parseInt(t.slice(4,6),16)}`);d.data={datasets:Array.from(Object.keys(e.cells),t=>{let r=[];return e.cells[t].forEach(([c,E,F])=>{r.push({x:E,y:F})}),{data:r,label:t}})},d.options={elements:{point:{radius:1.2,backgroundColor:t=>a===null?`${l[t.datasetIndex]}, 1)`:k(y)?`${l[t.datasetIndex]}, ${a(e.cells[t.dataset.label][t.dataIndex][0])?1:0})`:`${l[t.datasetIndex]}, ${a(e.cells[t.dataset.label][t.dataIndex][0])?0:1})`}},plugins:{tooltip:{callbacks:{label:t=>e.cells[t.dataset.label][t.dataIndex][0]}},legend:{labels:{generateLabels:t=>Array.from(w.defaults.plugins.legend.labels.generateLabels(t),(r,c)=>(r.fillStyle=`${l[c]}, 1)`,r))}}}},i.update()},{defer:!0})),q(()=>{i=new w("chart",d)}),[(()=>{const e=R.cloneNode(!0),l=e.firstChild,t=l.nextSibling;return t.$$input=r=>{n(r.currentTarget.value)},$(t,m(v,{each:x,children:r=>(()=>{const c=G.cloneNode(!0);return c.value=r,$(c,r),c})()})),e})(),(()=>{const e=z.cloneNode(!0),l=e.firstChild,t=l.nextSibling;return t.$$input=r=>{f(r.currentTarget.value)},$(t,m(I,{get when(){return!b.loading},get fallback(){return"loading cell data ..."},get children(){return m(v,{get each(){return b().genes},get fallback(){return"loading button ..."},children:r=>(()=>{const c=G.cloneNode(!0);return c.value=r,$(c,r),c})()})}})),e})(),(()=>{const e=H.cloneNode(!0),l=e.firstChild,t=l.nextSibling;return t.$$input=r=>{_(parseFloat(r.currentTarget.value))},e})(),(()=>{const e=J.cloneNode(!0),l=e.firstChild,t=l.nextSibling;return t.$$input=r=>{j(r.currentTarget.value==="g")},e})(),m(I,{get when(){return B(()=>s()!==null,!0)()&&h()!==null},get fallback(){return Z.cloneNode(!0)},get children(){const e=Q.cloneNode(!0),l=e.firstChild;return l.$$click=()=>L(s()),e}}),(()=>{const e=U.cloneNode(!0),l=e.firstChild;return l.$$click=()=>{a=null,f(null),_(null),i.update()},e})(),(()=>{const e=V.cloneNode(!0);return e.firstChild,$(e,s,null),e})(),(()=>{const e=W.cloneNode(!0);return e.firstChild,$(e,h,null),e})(),(()=>{const e=X.cloneNode(!0),l=e.firstChild,t=l.nextSibling;return t.nextSibling,$(e,()=>y()?"greater":"lesser or equal",t),e})(),Y.cloneNode(!0)]},document.getElementById("root"));T(["input","click"]);
